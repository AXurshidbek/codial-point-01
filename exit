[33mcommit 070564315c710b348a9311ff19ab4938bc7d0d66[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmain[m[33m, [m[1;31mnew-origin/main[m[33m)[m
Author: AXurshidbek <abdubannobovx@gmail.com>
Date:   Fri Jan 24 19:35:49 2025 +0500

    Updated

[1mdiff --git a/core/__pycache__/settings.cpython-312.pyc b/core/__pycache__/settings.cpython-312.pyc[m
[1mindex adb2a2a..6dfd9b8 100644[m
Binary files a/core/__pycache__/settings.cpython-312.pyc and b/core/__pycache__/settings.cpython-312.pyc differ
[1mdiff --git a/core/__pycache__/urls.cpython-312.pyc b/core/__pycache__/urls.cpython-312.pyc[m
[1mindex 4184382..a36b317 100644[m
Binary files a/core/__pycache__/urls.cpython-312.pyc and b/core/__pycache__/urls.cpython-312.pyc differ
[1mdiff --git a/core/settings.py b/core/settings.py[m
[1mindex 9dd5de7..1c9ecd5 100644[m
[1m--- a/core/settings.py[m
[1m+++ b/core/settings.py[m
[36m@@ -22,7 +22,7 @@[m [mBASE_DIR = Path(__file__).resolve().parent.parent[m
 SECRET_KEY = 'django-insecure-%vlf9(8ze_x@rii5pko5szjqp36z-u!co83r9jlvta0x1k#y@m'[m
 [m
 # SECURITY WARNING: don't run with debug turned on in production![m
[31m-DEBUG = False[m
[32m+[m[32mDEBUG = True[m
 [m
 ALLOWED_HOSTS = ["*"][m
 [m
[1mdiff --git a/db.sqlite3 b/db.sqlite3[m
[1mindex 5b000f7..629fabe 100644[m
Binary files a/db.sqlite3 and b/db.sqlite3 differ
[1mdiff --git a/main/__pycache__/models.cpython-312.pyc b/main/__pycache__/models.cpython-312.pyc[m
[1mindex 792d1c9..b5d5e2d 100644[m
Binary files a/main/__pycache__/models.cpython-312.pyc and b/main/__pycache__/models.cpython-312.pyc differ
[1mdiff --git a/main/__pycache__/views.cpython-312.pyc b/main/__pycache__/views.cpython-312.pyc[m
[1mindex e12bea6..73a0add 100644[m
Binary files a/main/__pycache__/views.cpython-312.pyc and b/main/__pycache__/views.cpython-312.pyc differ
[1mdiff --git a/main/models.py b/main/models.py[m
[1mindex 9eb04a3..ba89d0a 100644[m
[1m--- a/main/models.py[m
[1m+++ b/main/models.py[m
[36m@@ -87,34 +87,65 @@[m [mclass GivePoint(models.Model):[m
             raise ValidationError([m
                 f"Mentor {self.mentor.user.username} does not have enough point_limit (available: {self.mentor.point_limit}).")[m
 [m
[31m-    def save(self, *args, **kwargs):[m
[31m-        self.clean()[m
[32m+[m[32m    # def save(self, *args, **kwargs):[m
[32m+[m[32m    #     self.clean()[m
[32m+[m[32m    #[m
[32m+[m[32m    #     # Handle updating old data if this is an update[m
[32m+[m[32m    #     if self.pk:[m
[32m+[m[32m    #         prev_instance = GivePoint.objects.get(pk=self.pk)[m
[32m+[m[32m    #         prev_student = prev_instance.student[m
[32m+[m[32m    #         prev_mentor = prev_instance.mentor[m
[32m+[m[32m    #         prev_amount = prev_instance.amount[m
[32m+[m[32m    #[m
[32m+[m[32m    #         # Revert previous points[m
[32m+[m[32m    #         if prev_student:[m
[32m+[m[32m    #             prev_student.point -= prev_amount[m
[32m+[m[32m    #             prev_student.save()[m
[32m+[m[32m    #[m
[32m+[m[32m    #         if prev_mentor:[m
[32m+[m[32m    #             prev_mentor.point_limit += prev_amount[m
[32m+[m[32m    #             prev_mentor.save()[m
[32m+[m[32m    #[m
[32m+[m[32m    #     # Save new instance[m
[32m+[m[32m    #     super().save(*args, **kwargs)[m
[32m+[m[32m    #[m
[32m+[m[32m    #     # Update student points[m
[32m+[m[32m    #     if self.student:[m
[32m+[m[32m    #         self.student.point += self.amount[m
[32m+[m[32m    #         self.student.save()[m
[32m+[m[32m    #[m
[32m+[m[32m    #     # Update mentor point limit[m
[32m+[m[32m    #     if self.mentor:[m
[32m+[m[32m    #         self.mentor.point_limit -= self.amount[m
[32m+[m[32m    #         self.mentor.save()[m
 [m
[32m+[m[32m    def save(self, *args, **kwargs):[m
         # Handle updating old data if this is an update[m
         if self.pk:[m
[31m-            prev_instance = GivePoint.objects.get(pk=self.pk)[m
[31m-            prev_student = prev_instance.student[m
[31m-            prev_mentor = prev_instance.mentor[m
[31m-            prev_amount = prev_instance.amount[m
[32m+[m[32m            prev_instance = GivePoint.objects.select_related('student', 'mentor').get(pk=self.pk)[m
 [m
[31m-            # Revert previous points[m
[31m-            if prev_student:[m
[31m-                prev_student.point -= prev_amount[m
[31m-                prev_student.save()[m
[32m+[m[32m            # Revert points from the previous student[m
[32m+[m[32m            if prev_instance.student:[m
[32m+[m[32m                prev_instance.student.point -= prev_instance.amount[m
[32m+[m[32m                prev_instance.student.save()[m
 [m
[31m-            if prev_mentor:[m
[31m-                prev_mentor.point_limit += prev_amount[m
[31m-                prev_mentor.save()[m
[32m+[m[32m            # Revert previous mentor point limit[m
[32m+[m[32m            if prev_instance.mentor:[m
[32m+[m[32m                prev_instance.mentor.point_limit += prev_instance.amount[m
[32m+[m[32m                prev_instance.mentor.save()[m
 [m
[31m-        # Save new instance[m
[32m+[m[32m            # Delete the old instance (optional, if you want to remove it before saving the new one)[m
[32m+[m[32m            prev_instance.delete()[m
[32m+[m
[32m+[m[32m        # Save the new or updated instance[m
         super().save(*args, **kwargs)[m
 [m
[31m-        # Update student points[m
[32m+[m[32m        # Apply new points to the current student[m
         if self.student:[m
             self.student.point += self.amount[m
             self.student.save()[m
[31m-[m
[31m-        # Update mentor point limit[m
[32m+[m[32m        #[m
[32m+[m[32m        # # Deduct points from the current mentor's limit[m
         if self.mentor:[m
             self.mentor.point_limit -= self.amount[m
             self.mentor.save()[m
[1mdiff --git a/main/views.py b/main/views.py[m
[1mindex a79f8c6..4fe8c3f 100644[m
[1m--- a/main/views.py[m
[1m+++ b/main/views.py[m
[36m@@ -144,6 +144,48 @@[m [mclass GivePointRetrieveUpdateDestroyView(generics.RetrieveUpdateDestroyAPIView):[m
     serializer_class = GivePointSerializer[m
     permission_classes = [IsAuthenticated][m
 [m
[32m+[m[32m# class GivePointRetrieveUpdateDestroyView(generics.RetrieveUpdateDestroyAPIView):[m
[32m+[m[32m#     queryset = GivePoint.objects.all()[m
[32m+[m[32m#     serializer_class = GivePointSerializer[m
[32m+[m[32m#     permission_classes = [IsAuthenticated][m
[32m+[m[32m#     def update(self, request, *args, **kwargs):[m
[32m+[m[32m#         instance = self.get_object()[m
[32m+[m[32m#         serializer = self.get_serializer(instance, data=request.data, partial=True)[m
[32m+[m[32m#[m
[32m+[m[32m#         if serializer.is_valid():[m
[32m+[m[32m#             # Handle reverting points for previous student and mentor before saving new data[m
[32m+[m[32m#             prev_student = instance.student[m
[32m+[m[32m#             prev_mentor = instance.mentor[m
[32m+[m[32m#             prev_amount = instance.amount[m
[32m+[m[32m#[m
[32m+[m[32m#             # Revert points from the previous student[m
[32m+[m[32m#             if prev_student:[m
[32m+[m[32m#                 prev_student.point -= prev_amount[m
[32m+[m[32m#                 prev_student.save()[m
[32m+[m[32m#[m
[32m+[m[32m#             # Revert previous mentor point limit[m
[32m+[m[32m#             if prev_mentor:[m
[32m+[m[32m#                 prev_mentor.point_limit += prev_amount[m
[32m+[m[32m#                 prev_mentor.save()[m
[32m+[m[32m#[m
[32m+[m[32m#             # Save the new values[m
[32m+[m[32m#             self.perform_update(serializer)[m
[32m+[m[32m#[m
[32m+[m[32m#             # Apply new points to the current student[m
[32m+[m[32m#             new_student = serializer.validated_data.get('student', None)[m
[32m+[m[32m#             if new_student:[m
[32m+[m[32m#                 new_student.point += serializer.validated_data['amount'][m
[32m+[m[32m#                 new_student.save()[m
[32m+[m[32m#[m
[32m+[m[32m#             # Deduct points from the current mentor's limit[m
[32m+[m[32m#             new_mentor = serializer.validated_data.get('mentor', None)[m
[32m+[m[32m#             if new_mentor:[m
[32m+[m[32m#                 new_mentor.point_limit -= serializer.validated_data['amount'][m
[32m+[m[32m#                 new_mentor.save()[m
[32m+[m[32m#[m
[32m+[m[32m#             return Response(serializer.data)[m
[32m+[m[32m#[m
[32m+[m[32m#         return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)[m
 [m
 class NewsListView(generics.ListAPIView):[m
     queryset = New.objects.all()[m
